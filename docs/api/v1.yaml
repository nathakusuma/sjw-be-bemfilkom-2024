openapi: 3.0.3
info:
  title: SJW FILKOM API Specification
  version: 1.0.0
  contact:
    name: I Putu Natha Kusuma
    email: natha@nathakusuma.com
servers:
  - url: 'https://api.sjw.nathakusuma.com/v1'
    description: Production server
tags:
  - name: auth
    description: Authentication & Authorization
  - name: hopes
    description: Hope Corner
  - name: whispers
    description: Whisper Wall
  - name: admin
    description: Admin only endpoints
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to the system (for admins)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Can be either NIM or email
                password:
                  type: string
                  description: The password of the user
              required:
                - username
                - password
            examples:
              withNIM:
                summary: NIM as username
                value:
                  username: 235150201111000
                  password: very-secure-password
              withEmail:
                summary: Email as username
                value:
                  username: natha@student.ub.ac.id
                  password: very-secure-password
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: The JWT token for the authenticated session
              example:
                message: successfully logged in
                data:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyMzUxNTAyMDExMTEwMDAiLCJlbWFpbCI6Im5hdGhhQHN0dWRlbnQudWIuYWMuaWQiLCJmdWxsX25hbWUiOiJOYXRoYSBLdXN1bWEiLCJyb2xlIjoiYWRtaW4iLCJleHAiOjE1MTYyMzkwMjJ9.0ee45LPBN67SU0XPt-rNLAqLQwJiyVogGw7bu9aOi-Y
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    description: The response details (if any)
              example:
                message: Invalid username or password
                data: {}
        '400':
          description: Invalid request body
        '500':
          description: Fail to authenticate to UB auth or fail to get user data or fail to generate token
  /hopes:
    post:
      tags:
        - hopes
      summary: Create a new hope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The content of the hope
              required:
                - content
            example:
              content: "This is a new hope"
      responses:
        '201':
          description: Successfully created a new hope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The UUID of the created hope
              example:
                message: hope created
                data:
                  id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '400':
          description: Invalid request body
        '500':
          description: Internal server error
    get:
      tags:
        - hopes
      summary: Retrieve a list of approved hopes
      parameters:
        - name: after_created_at
          in: query
          description: The timestamp of the last hope in the previous fetch in RFC3339 format
          required: false
          example: 2006-01-02T15:04:05%2B07:00
          schema:
            type: string
            format: date-time
        - name: after_id
          in: query
          description: The UUID of the last hope in the previous fetch
          required: false
          example: 4fa85f64-5717-4562-b3fc-2c963f66afa7
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: The maximum number of hopes to return
          required: false
          example: 10
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved hopes
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The UUID of the hope
                        content:
                          type: string
                          description: The content of the hope
                        created_at:
                          type: string
                          format: date-time
                          description: The timestamp when the hope was created in RFC3339 format
              example:
                message: hopes retrieved
                data:
                  - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    content: "This is a hope"
                    created_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid query parameters
        '500':
          description: Internal server error
  /hopes/{id}:
    get:
      tags:
        - hopes
      summary: Retrieve a specific approved hope by its ID
      parameters:
        - name: id
          in: path
          description: The UUID of the hope
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the hope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The UUID of the hope
                      content:
                        type: string
                        description: The content of the hope
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp when the hope was created in RFC3339 format
              example:
                message: hope retrieved
                data:
                  id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  content: "This is a hope"
                  created_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid ID format
        '404':
          description: Hope not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    description: The response details (if any)
              example:
                message: hope not found
                data: {}
        '500':
          description: Internal server error
  /admin/hopes:
    get:
      tags:
        - admin
        - hopes
      summary: Retrieve a list of hopes as an admin
      description: It will return all hopes, including unapproved ones.
      parameters:
        - name: after_created_at
          in: query
          description: The timestamp of the last hope in the previous fetch in RFC3339 format
          required: false
          example: 2006-01-02T15:04:05%2B07:00
          schema:
            type: string
            format: date-time
        - name: after_id
          in: query
          description: The UUID of the last hope in the previous fetch
          required: false
          example: 4fa85f64-5717-4562-b3fc-2c963f66afa7
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: The maximum number of hopes to return
          required: false
          example: 10
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved hopes
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The UUID of the hope
                        content:
                          type: string
                          description: The content of the hope
                        is_approved:
                          type: boolean
                          description: Approval status of the hope
                        created_at:
                          type: string
                          format: date-time
                          description: The timestamp when the hope was created in RFC3339 format
                        updated_at:
                          type: string
                          format: date-time
                          description: The timestamp when the hope was last updated in RFC3339 format
              example:
                message: hopes retrieved
                data:
                  - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    content: "This is a hope"
                    is_approved: true
                    created_at: 2006-01-02T15:04:05+07:00
                    updated_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid query parameters
        '500':
          description: Internal server error
  /admin/hopes/{id}:
    get:
      tags:
        - admin
        - hopes
      summary: Retrieve a specific hope by its ID as an admin
      parameters:
        - name: id
          in: path
          description: The UUID of the hope
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the hope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The UUID of the hope
                      content:
                        type: string
                        description: The content of the hope
                      is_approved:
                        type: boolean
                        description: Approval status of the hope
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp when the hope was created in RFC3339 format
                      updated_at:
                        type: string
                        format: date-time
                        description: The timestamp when the hope was last updated in RFC3339 format
              example:
                message: hope retrieved
                data:
                  id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  content: "This is a hope"
                  is_approved: true
                  created_at: 2006-01-02T15:04:05+07:00
                  updated_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid ID format
        '404':
          description: Hope not found
        '500':
          description: Internal server error
    patch:
      tags:
        - admin
        - hopes
      summary: Update a specific hope by its ID as an admin
      parameters:
        - name: id
          in: path
          description: The UUID of the hope
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The updated content of the hope
                is_approved:
                  type: boolean
                  description: The updated approval status of the hope
            example:
              content: "This is an updated hope"
              is_approved: true
      responses:
        '200':
          description: Successfully updated the hope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data: {}
              example:
                message: hope updated
                data: {}
        '400':
          description: Invalid ID format or request body
        '404':
          description: Hope not found
        '500':
          description: Internal server error
    delete:
      tags:
        - admin
        - hopes
      summary: Delete a specific hope by its ID as an admin
      parameters:
        - name: id
          in: path
          description: The UUID of the hope
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted the hope
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    description: The response details (if any)
              example:
                message: hope deleted
                data: {}
        '400':
          description: Invalid ID format
        '404':
          description: Hope not found
        '500':
          description: Internal server error
  /whispers:
    post:
      tags:
        - whispers
      summary: Create a new whisper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The content of the whisper
              required:
                - content
            example:
              content: "This is a new whisper"
      responses:
        '201':
          description: Successfully created a new whisper
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The UUID of the created whisper
              example:
                message: whisper created
                data:
                  id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '400':
          description: Invalid request body
        '500':
          description: Internal server error
    get:
      tags:
        - whispers
      summary: Retrieve a list of approved whispers
      parameters:
        - name: after_created_at
          in: query
          description: The timestamp of the last whisper in the previous fetch in RFC3339 format
          required: false
          example: 2006-01-02T15:04:05%2B07:00
          schema:
            type: string
            format: date-time
        - name: after_id
          in: query
          description: The UUID of the last whisper in the previous fetch
          required: false
          example: 4fa85f64-5717-4562-b3fc-2c963f66afa7
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: The maximum number of whispers to return
          required: false
          example: 10
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved whispers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The UUID of the whisper
                        content:
                          type: string
                          description: The content of the whisper
                        created_at:
                          type: string
                          format: date-time
                          description: The timestamp when the whisper was created in RFC3339 format
              example:
                message: whispers retrieved
                data:
                  - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    content: "This is a whisper"
                    created_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid query parameters
        '500':
          description: Internal server error
  /whispers/{id}:
    get:
      tags:
        - whispers
      summary: Retrieve a specific approved whisper by its ID
      parameters:
        - name: id
          in: path
          description: The UUID of the whisper
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the whisper
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The UUID of the whisper
                      content:
                        type: string
                        description: The content of the whisper
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp when the whisper was created in RFC3339 format
              example:
                message: whisper retrieved
                data:
                  id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  content: "This is a whisper"
                  created_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid ID format
        '404':
          description: whisper not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    description: The response details (if any)
              example:
                message: whisper not found
                data: { }
        '500':
          description: Internal server error
  /admin/whispers:
    get:
      tags:
        - admin
        - whispers
      summary: Retrieve a list of whispers as an admin
      description: It will return all whispers, including unapproved ones.
      parameters:
        - name: after_created_at
          in: query
          description: The timestamp of the last whisper in the previous fetch in RFC3339 format
          required: false
          example: 2006-01-02T15:04:05%2B07:00
          schema:
            type: string
            format: date-time
        - name: after_id
          in: query
          description: The UUID of the last whisper in the previous fetch
          required: false
          example: 4fa85f64-5717-4562-b3fc-2c963f66afa7
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: The maximum number of whispers to return
          required: false
          example: 10
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved whispers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The UUID of the whisper
                        content:
                          type: string
                          description: The content of the whisper
                        is_approved:
                          type: boolean
                          description: Approval status of the whisper
                        created_at:
                          type: string
                          format: date-time
                          description: The timestamp when the whisper was created in RFC3339 format
                        updated_at:
                          type: string
                          format: date-time
                          description: The timestamp when the whisper was last updated in RFC3339 format
              example:
                message: whispers retrieved
                data:
                  - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    content: "This is a whisper"
                    is_approved: true
                    created_at: 2006-01-02T15:04:05+07:00
                    updated_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid query parameters
        '500':
          description: Internal server error
  /admin/whispers/{id}:
    get:
      tags:
        - admin
        - whispers
      summary: Retrieve a specific whisper by its ID as an admin
      parameters:
        - name: id
          in: path
          description: The UUID of the whisper
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the whisper
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The UUID of the whisper
                      content:
                        type: string
                        description: The content of the whisper
                      is_approved:
                        type: boolean
                        description: Approval status of the whisper
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp when the whisper was created in RFC3339 format
                      updated_at:
                        type: string
                        format: date-time
                        description: The timestamp when the whisper was last updated in RFC3339 format
              example:
                message: whisper retrieved
                data:
                  id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  content: "This is a whisper"
                  is_approved: true
                  created_at: 2006-01-02T15:04:05+07:00
                  updated_at: 2006-01-02T15:04:05+07:00
        '400':
          description: Invalid ID format
        '404':
          description: whisper not found
        '500':
          description: Internal server error
    patch:
      tags:
        - admin
        - whispers
      summary: Update a specific whisper by its ID as an admin
      parameters:
        - name: id
          in: path
          description: The UUID of the whisper
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The updated content of the whisper
                is_approved:
                  type: boolean
                  description: The updated approval status of the whisper
            example:
              content: "This is an updated whisper"
              is_approved: true
      responses:
        '200':
          description: Successfully updated the whisper
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data: { }
              example:
                message: whisper updated
                data: { }
        '400':
          description: Invalid ID format or request body
        '404':
          description: whisper not found
        '500':
          description: Internal server error
    delete:
      tags:
        - admin
        - whispers
      summary: Delete a specific whisper by its ID as an admin
      parameters:
        - name: id
          in: path
          description: The UUID of the whisper
          required: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted the whisper
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message of the response
                  data:
                    type: object
                    description: The response details (if any)
              example:
                message: whisper deleted
                data: { }
        '400':
          description: Invalid ID format
        '404':
          description: whisper not found
        '500':
          description: Internal server error